name: Deploy MultiK8s

on:
  push:
    branches:
      - feature/* # Trigger build for feature branches
      - master    # Trigger build and deploy when code is pushed to master
  pull_request:
    branches:
      - master # Trigger build when PR is merged into master

env:
  SHA: $(git rev-parse HEAD)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: List Repository Files in build
        run: ls -R         

      - name: Test
        run: |-
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t mukkipandy/react-test -f ./client/Dockerfile.dev ./client
          docker run -e CI=true mukkipandy/react-test npm test

      - name: Build
        run: |-
          docker build -t mukkipandy/multi-client-k8s-gh:latest -t mukkipandy/multi-client-k8s-gh:${{ env.SHA }} -f ./client/Dockerfile ./client
          docker build -t mukkipandy/multi-server-k8s-gh:latest -t mukkipandy/multi-server-k8s-gh:${{ env.SHA }} -f ./server/Dockerfile ./server
          docker build -t mukkipandy/multi-worker-k8s-gh:latest -t mukkipandy/multi-worker-k8s-gh:${{ env.SHA }} -f ./worker/Dockerfile ./worker

      - name: Push
        if: success()
        run: |-
          docker push mukkipandy/multi-client-k8s-gh:latest
          docker push mukkipandy/multi-server-k8s-gh:latest
          docker push mukkipandy/multi-worker-k8s-gh:latest

          docker push mukkipandy/multi-client-k8s-gh:${{ env.SHA }}
          docker push mukkipandy/multi-server-k8s-gh:${{ env.SHA }}
          docker push mukkipandy/multi-worker-k8s-gh:${{ env.SHA }}     

  deploy:
    needs: build
    if: github.ref == 'refs/heads/master' && success()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          sparse-checkout: 'k8s/'

      - name: List Repository Files in deployment
        run: ls -R 

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-south-1

      - name: Create EKS Cluster Kubeconfig
        run: |
          aws eks update-kubeconfig --region ap-south-1 --name multi-cluster

      - name: Clean up Kubernetes Resources
        run: |
          kubectl delete all --all -n default || true
          kubectl delete pvc --all -n default || true
          kubectl delete configmap --all -n default || true

      - name: Debug Kubernetes Config
        run: kubectl config view

      - name: Deploy to EKS
        run: |-
          kubectl apply -f k8s --validate=false
          kubectl set image deployments/server-deployment server=mukkipandy/multi-server-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/client-deployment client=mukkipandy/multi-client-k8s-gh:${{ env.SHA }}
          kubectl set image deployments/worker-deployment worker=mukkipandy/multi-worker-k8s-gh:${{ env.SHA }}

      - name: Verify Pods
        run: kubectl get pods --all-namespaces